version: '3.8'

services:
  db:
    image: postgres:16
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-my_password}
      POSTGRES_DB: ${POSTGRES_DB:-mydb}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:
    image: ollama/ollama
    container_name: ollama-service # <-- UPDATED FROM gemma-ollama
    restart: always
    volumes:
      - ollama_data:/root/.ollama

  app:
    build: ./app
    container_name: aisavvy-api
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./app_data:/app/data
    environment:
      DB_HOST: db
      POSTGRES_DB: ${POSTGRES_DB:-mydb}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-my_password}
      OLLAMA_HOST: http://ollama:11434
      LLM_MODEL: llama3 # Using the more powerful model by default
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_started

  ui:
    build: ./ui
    container_name: aisavvy-ui
    restart: always
    ports:
      - "8501:8501"
    depends_on:
      - app

volumes:
  pgdata:
  ollama_data: